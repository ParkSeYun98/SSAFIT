<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.fit.model.dao.ReviewDao">
	
	<!-- 전체 리뷰 읽기 -->
	<select id="selectAllReview" resultType="Review">
		SELECT videoId, id, title, writer, view_cnt as viewCnt, date_format(reg_date, '%y-%m-%d') as regDate, description
		FROM review
	</select>
	
	<!-- 아이디에 해당하는 리뷰 읽기 -->
	<select id="selectReviewById" parameterType="int" resultType="Review">
		SELECT videoId, id, title, writer, view_cnt as viewCnt, date_format(reg_date, '%y-%m-%d') as regDate, description
		FROM review
		WHERE id = #{id}
	</select>
	
	<!-- 리뷰 등록 -->
	<insert id="insertReview" parameterType="Review"> 
		INSERT INTO review (videoId, title, writer, description)
		VALUES (#{videoId}, #{title}, #{writer}, #{description})
	</insert>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="int">
		DELETE FROM review
		WHERE id = #{id}
	</delete>
	
	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="Review">
		UPDATE review
		SET title = #{title}, description = #{description}
		WHERE id = #{id}
	</update>
	
	<!-- 리뷰 조회수 증가 -->
	<update id="updateReviewViewCnt" parameterType="int">
		UPDATE review
		SET view_cnt = view_cnt+1
		WHERE id = #{id}
	</update>
	
	<!-- 리뷰 검색 -->
	<select id="search" parameterType="SearchCondition" resultType="Review" >
		SELECT *
		FROM review
		
		<if test="key != 'none'">
				WHERE ${key} LIKE concat('%', #{word}, '%')
		</if>
		
		<if test="orderBy != 'none'">
			ORDER BY ${orderBy} ${orderByDir}
		</if>
	</select>
	
	<!-- 리뷰 리스트 가져오기 -->
	<select id="selectReviewListByVideoId" parameterType="String" resultType="Review">
		SELECT review.videoId, review.id, review.title, review.writer, review.view_cnt as viewCnt, date_format(review.reg_date, '%y-%m-%d %h:%i:%s') as regDate, review.description
		FROM review
		JOIN video
		ON video.id = review.videoId
		WHERE review.videoId = #{videoId}
		ORDER BY review.videoId
	</select>
	
</mapper>